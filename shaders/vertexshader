#version 330 core

in vec3 vertexPosition;
in vec3 vertexColor;
in vec2 vertexTexture;

uniform mat4 MVP;
out vec3 fragmentColor;
out vec2 fragmentTexture;

// For position and texture mixtures
uniform float weight;
in vec3 otherVertexPosition;
in vec2 otherVertexTexture;
out vec2 otherFragmentTexture;


void main(){

	gl_Position =  MVP * vec4(weight * vertexPosition + (1 - weight) * otherVertexPosition, 1);
	fragmentColor = vertexColor;
	fragmentTexture = vec2(vertexTexture.x, 1.0 - vertexTexture.y);
	otherFragmentTexture = vec2(otherVertexTexture.x, 1.0 - otherVertexTexture.y);
}